name: paperDEX

services:
  postgresDB:
    container_name: postgresDB
    image: postgres:17
    volumes:
      - postgres_database:/var/lib/postgresql/data
    networks:
      - paperdex_network
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: paperdex
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    container_name: redis
    image: redis:7.2
    ports:
      - "6379:6379"
    networks:
      - paperdex_network
    volumes:
      - redis_data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]

  redisinsight:
    container_name: redisinsight
    image: redis/redisinsight:latest
    ports:
      - "5540:5540"
    volumes:
      - redisinsight:/data
    networks:
      - paperdex_network

  # order-service:
  #   container_name: order-service
  #   build:
  #     context: .
  #     dockerfile: ./packages/order-service/Dockerfile
  #   restart: always
  #   ports:
  #     - 4002:4002
  #   volumes:
  #     - ./packages/order-service:/apps
  #     - /apps/node_modules
  #   networks:
  #     - paperdex_network
  #   depends_on:
  #     - postgresDB
  #     - redis
  #   environment:
  #     NODE_ENV: ${DOCKER_NODE_ENV}
  #     USER_SERVICE_PORT: ${DOCKER_USER_SERVICE_PORT}
  #     BETTER_AUTH_SECRET: ${DOCKER_BETTER_AUTH_SECRET}
  #     GOOGLE_CLIENT_ID: ${DOCKER_GOOGLE_CLIENT_ID}
  #     GOOGLE_CLIENT_SECRET: ${DOCKER_GOOGLE_CLIENT_SECRET}
  #     RESEND_API_KEY: ${DOCKER_RESEND_API_KEY}
  #     EMAIL_FROM: ${DOCKER_EMAIL_FROM}
  #     BETTER_AUTH_URL: ${DOCKER_BETTER_AUTH_URL}
  #     NEXT_PUBLIC_CLIENT_SERVICE: ${DOCKER_NEXT_PUBLIC_CLIENT_SERVICE}
  #     NEXT_PUBLIC_USER_SERVICE: ${DOCKER_NEXT_PUBLIC_USER_SERVICE}
  #     DATABASE_URL: ${DOCKER_DATABASE_URL}
  #     DIRECT_URL: ${DOCKER_DIRECT_URL}
  #     REDIS_URL: ${DOCKER_REDIS_URL}
  #     DOCKER_NEXT_PUBLIC_ORDER_SERVICE: ${NEXT_PUBLIC_ORDER_SERVICE}

  # user-service:
  #   container_name: user-service
  #   build:
  #     context: .
  #     dockerfile: ./packages/user-service/Dockerfile
  #   restart: always
  #   ports:
  #     - 4001:4001
  #   volumes:
  #     - ./packages/user-service:/apps
  #     - /apps/node_modules
  #   networks:
  #     - paperdex_network
  #   depends_on:
  #     - postgresDB
  #     - redis
  #   environment:
  #     NODE_ENV: ${DOCKER_NODE_ENV}
  #     USER_SERVICE_PORT: ${DOCKER_USER_SERVICE_PORT}
  #     BETTER_AUTH_SECRET: ${DOCKER_BETTER_AUTH_SECRET}
  #     GOOGLE_CLIENT_ID: ${DOCKER_GOOGLE_CLIENT_ID}
  #     GOOGLE_CLIENT_SECRET: ${DOCKER_GOOGLE_CLIENT_SECRET}
  #     RESEND_API_KEY: ${DOCKER_RESEND_API_KEY}
  #     EMAIL_FROM: ${DOCKER_EMAIL_FROM}
  #     BETTER_AUTH_URL: ${DOCKER_BETTER_AUTH_URL}
  #     NEXT_PUBLIC_CLIENT_SERVICE: ${DOCKER_NEXT_PUBLIC_CLIENT_SERVICE}
  #     NEXT_PUBLIC_USER_SERVICE: ${DOCKER_NEXT_PUBLIC_USER_SERVICE}
  #     DATABASE_URL: ${DOCKER_DATABASE_URL}
  #     DIRECT_URL: ${DOCKER_DIRECT_URL}
  #     REDIS_URL: ${DOCKER_REDIS_URL}
  #     DOCKER_NEXT_PUBLIC_ORDER_SERVICE: ${NEXT_PUBLIC_ORDER_SERVICE}

volumes:
  postgres_database:
  redis_data:
  redisinsight:

networks:
  paperdex_network:
    driver: bridge
